@* This is a Razor-style comment in a CSHTML file *@

<!-- This is an HTML-style comment in a CSHTML file -->
<!-- This View coresponds to Controller ComicBook and its Action Detail -->

@*


    - Starting a line with @ specifies that we are using C#.
    - C# content is escaped. You need to use Html.Raw().
    - You can make changes in the View source and refresh the webpage without rerunning it.


    - Loop with @.
    - <ul> : unordered list
    - <li> : list item
    - Ctrl+K, Ctrl+C to comment out a block of code, and Ctrl+K, Ctrl+U to uncomment a block of code.
    - If in @.


    - ViewBag defined at controller and used here.
    - Because ViewBag is dynamic there is no InteliSense.
    - ViewBag properties are not case sensitive.


    - html, head, body live in html, contents below are rendered from RenderBody()


    - Adding strongly typed views (models to views)


    - @( C# code here ) if not all code is noticed.


*@

@model Comic_Book_Gallery.Models.ComicBook

@{
    ViewBag.Title = Model.DisplayText; // Tab title
}

<h2>@Model.DisplayText</h2>

<div class="row">
    <!-- boostrap css classes -->
    <div class="col-md-6">
        <div class="well">
            <h5><label>Series Title:</label> @Model.SeriesTitle</h5>
            <h5><label>Issue #:</label> @Model.IssueNumber</h5>
            <h5><label>Favorite:</label> @(Model.Favorite ? "Yes" : "No")</h5>
            @if (Model.Artists.Length > 0)
            {
                <h5>Artist:</h5>
                <div>
                    <ul>
                        @foreach (var artist in Model.Artists)
                        {
                            <li>@artist.Role: @artist.Name</li>
                        }
                    </ul>
                </div>
            }
        </div>
        <h5>Description</h5>
        <p>@Html.Raw(Model.DescriptionHtml)</p>
    </div>
    <div class="col-md-6">
        <img src="~/Images/@Model.CoverImageFileName"
             alt="@Model.DisplayText" class="img-responsive" />
    </div>
</div>

